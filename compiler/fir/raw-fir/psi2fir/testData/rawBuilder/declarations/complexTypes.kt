package a.b

class C<T, out S> {
    inner class D<R, in P> {

    }
}

interface Test {
    val x: a.b.C<out CharSequence, *>.D<in List<*>, *>
}

// FIR_FRAGMENT_EXPECTED LINE: 3 TEXT OFFSET: 19 LINE TEXT: class C<T, out S> {
// FIR_FRAGMENT_EXPECTED LINE: 3 TEXT OFFSET: 21 LINE TEXT: T
// FIR_FRAGMENT_EXPECTED LINE: 3 TEXT OFFSET: 28 LINE TEXT: out S
// FIR_FRAGMENT_EXPECTED LINE: 4 TEXT OFFSET: 49 LINE TEXT: inner class D<R, in P> {
// FIR_FRAGMENT_EXPECTED LINE: 4 TEXT OFFSET: 51 LINE TEXT: R
// FIR_FRAGMENT_EXPECTED LINE: 4 TEXT OFFSET: 57 LINE TEXT: in P
// FIR_FRAGMENT_EXPECTED LINE: 9 TEXT OFFSET: 82 LINE TEXT: interface Test {